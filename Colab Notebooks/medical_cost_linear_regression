{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNuDIc9RVG9dstp3dPCIasw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"rmf018pQ6MGo","executionInfo":{"status":"ok","timestamp":1673047763299,"user_tz":180,"elapsed":4185,"user":{"displayName":"João","userId":"04570462388568966109"}}},"outputs":[],"source":["#import required libraries\n","\n","import tensorflow as tf\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","%load_ext tensorboard\n","import datetime\n","log_dir = \"logs/fit/\" + datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n","tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir, histogram_freq=1)"]},{"cell_type":"code","source":["insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")"],"metadata":{"id":"O7vyROj46cId","executionInfo":{"status":"ok","timestamp":1673047763299,"user_tz":180,"elapsed":7,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["insurance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"j-TxYo3s6lNg","executionInfo":{"status":"ok","timestamp":1673047763300,"user_tz":180,"elapsed":7,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"c1284f1d-5b88-44ad-b21e-9f7183fad90b"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-d4487ce0-2ec2-4aab-8d20-554664ef8536\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4487ce0-2ec2-4aab-8d20-554664ef8536')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4487ce0-2ec2-4aab-8d20-554664ef8536 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4487ce0-2ec2-4aab-8d20-554664ef8536');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["insurance_one_hot = pd.get_dummies(insurance)"],"metadata":{"id":"gRlZ_hUk6fS0","executionInfo":{"status":"ok","timestamp":1673047763300,"user_tz":180,"elapsed":6,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["insurance_one_hot.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mANka6yN8zQS","executionInfo":{"status":"ok","timestamp":1673047763769,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"e6e1a991-33a5-4794-8aef-40542a71c750"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n","0   19  27.900         0  16884.92400           1         0          0   \n","1   18  33.770         1   1725.55230           0         1          1   \n","2   28  33.000         3   4449.46200           0         1          1   \n","3   33  22.705         0  21984.47061           0         1          1   \n","4   32  28.880         0   3866.85520           0         1          1   \n","\n","   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n","0           1                 0                 0                 0   \n","1           0                 0                 0                 1   \n","2           0                 0                 0                 1   \n","3           0                 0                 1                 0   \n","4           0                 0                 1                 0   \n","\n","   region_southwest  \n","0                 1  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  "],"text/html":["\n","  <div id=\"df-7309b2ef-57f3-4866-9a0a-2b7ec53aae4a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>16884.92400</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7309b2ef-57f3-4866-9a0a-2b7ec53aae4a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7309b2ef-57f3-4866-9a0a-2b7ec53aae4a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7309b2ef-57f3-4866-9a0a-2b7ec53aae4a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["X = insurance_one_hot.drop(\"charges\", axis = 1)\n","y = insurance_one_hot[\"charges\"]"],"metadata":{"id":"e0dmXkbWKUGe","executionInfo":{"status":"ok","timestamp":1673047763770,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"omugwpbRKefj","executionInfo":{"status":"ok","timestamp":1673047763770,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"f9f0e1e8-ab44-4b2a-efe2-3bfbb682a532"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n","0   19  27.900         0           1         0          0           1   \n","1   18  33.770         1           0         1          1           0   \n","2   28  33.000         3           0         1          1           0   \n","3   33  22.705         0           0         1          1           0   \n","4   32  28.880         0           0         1          1           0   \n","\n","   region_northeast  region_northwest  region_southeast  region_southwest  \n","0                 0                 0                 0                 1  \n","1                 0                 0                 1                 0  \n","2                 0                 0                 1                 0  \n","3                 0                 1                 0                 0  \n","4                 0                 1                 0                 0  "],"text/html":["\n","  <div id=\"df-0e1ad235-36df-4d3b-ab91-7aea87045af4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e1ad235-36df-4d3b-ab91-7aea87045af4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0e1ad235-36df-4d3b-ab91-7aea87045af4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0e1ad235-36df-4d3b-ab91-7aea87045af4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6MMI3QOpKiGJ","executionInfo":{"status":"ok","timestamp":1673047763770,"user_tz":180,"elapsed":11,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"124fbcbd-46fd-4011-89f2-3d491cbbb7c2"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    16884.92400\n","1     1725.55230\n","2     4449.46200\n","3    21984.47061\n","4     3866.85520\n","Name: charges, dtype: float64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"0O-v0_x_LPr-","executionInfo":{"status":"ok","timestamp":1673047763771,"user_tz":180,"elapsed":9,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model.compile(loss = tf.keras.losses.mae, optimizer = tf.keras.optimizers.SGD(), metrics = [\"mae\"])"],"metadata":{"id":"Q_ZT0Tf3L67R","executionInfo":{"status":"ok","timestamp":1673047764085,"user_tz":180,"elapsed":323,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train, y_train, epochs = 100, verbose = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UTcUGo9nNaAR","executionInfo":{"status":"ok","timestamp":1673047769759,"user_tz":180,"elapsed":5676,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"541a3fc8-656b-45ce-98c8-f472fa1a92d5"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f613f8bf4c0>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7AnHa8QNhNm","executionInfo":{"status":"ok","timestamp":1673047770320,"user_tz":180,"elapsed":563,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"cb89ce33-8532-4fa6-8f8a-e0a3e130224b"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 7023.3286 - mae: 7023.3286\n"]},{"output_type":"execute_result","data":{"text/plain":["[7023.32861328125, 7023.32861328125]"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["y_train.median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UKAnSYlPOJbP","executionInfo":{"status":"ok","timestamp":1673047770320,"user_tz":180,"elapsed":8,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"791d6af3-4bfb-44cd-b334-7b719b6505fe"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9575.4421"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["y_train.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NBxQaUWyOP7b","executionInfo":{"status":"ok","timestamp":1673047770320,"user_tz":180,"elapsed":6,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"3dffd42a-6b02-443b-f8ee-363cf226007f"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13346.089736364485"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","model_2 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100),\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model_2.compile(loss = tf.keras.losses.mae, optimizer = tf.keras.optimizers.Adam(), metrics = [\"mae\"])"],"metadata":{"id":"EBKpOJqVOWVI","executionInfo":{"status":"ok","timestamp":1673047770321,"user_tz":180,"elapsed":5,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["model_2.fit(X_train, y_train, epochs = 100, verbose = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pKvgHhFcPJWu","executionInfo":{"status":"ok","timestamp":1673047776431,"user_tz":180,"elapsed":6115,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"a10f8c65-2c37-42f8-c513-14bd83d62149"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f613f7e37c0>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["model_2.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wigRRdTGPNkG","executionInfo":{"status":"ok","timestamp":1673047776431,"user_tz":180,"elapsed":13,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"dba142e8-b44d-4130-a75e-ba9eae590d8c"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 4924.4956 - mae: 4924.4956\n"]},{"output_type":"execute_result","data":{"text/plain":["[4924.49560546875, 4924.49560546875]"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["tf.random.set_seed(42)\n","\n","model_3 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100),\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model_3.compile(loss = tf.keras.losses.mae, optimizer = tf.keras.optimizers.Adam(), metrics = [\"mae\"])"],"metadata":{"id":"xTSQRmsGQRhC","executionInfo":{"status":"ok","timestamp":1673047776837,"user_tz":180,"elapsed":415,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["history = model_3.fit(X_train, y_train, epochs = 200, verbose = 0)\n","history"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J3cOwC2jQUie","executionInfo":{"status":"ok","timestamp":1673047797639,"user_tz":180,"elapsed":20805,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"d9c2409e-0902-4c40-d340-ad897c289d50"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f613f75b940>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["model_3.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ASPfboFzQVlm","executionInfo":{"status":"ok","timestamp":1673047797639,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"c397055a-a4ce-4641-8e39-d95d423a5591"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3488.7854 - mae: 3488.7856\n"]},{"output_type":"execute_result","data":{"text/plain":["[3488.785400390625, 3488.78564453125]"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["pd.DataFrame(history.history).plot()\n","plt.ylabel(\"loss\")\n","plt.xlabel(\"epochs\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"xwBhB8O-Qgl4","executionInfo":{"status":"ok","timestamp":1673047798105,"user_tz":180,"elapsed":475,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"e3ddaae4-aadc-426e-d461-18abebd14504"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# the tensorflow EarlyStopping Callback: when loss stops decreasing the model stops the training"],"metadata":{"id":"a8LR7dUWQ9zD","executionInfo":{"status":"ok","timestamp":1673047798106,"user_tz":180,"elapsed":9,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# preprocessing data (normalization and stardardization)"],"metadata":{"id":"HTH_gnyeSQtK","executionInfo":{"status":"ok","timestamp":1673047798106,"user_tz":180,"elapsed":9,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["X[\"age\"].plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"L6PnVUM21LEl","executionInfo":{"status":"ok","timestamp":1673047798479,"user_tz":180,"elapsed":381,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"c16fb70b-87d8-436f-ddeb-b34df1e089f7"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f613ee05df0>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X[\"age\"].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"GhY3Piut2E7A","executionInfo":{"status":"ok","timestamp":1673047798480,"user_tz":180,"elapsed":17,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"f3104cea-99de-4684-edd3-053bc4e66659"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f613e8cd460>"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X[\"bmi\"].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"0Plo5fE72Iks","executionInfo":{"status":"ok","timestamp":1673047798809,"user_tz":180,"elapsed":341,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"00478f1f-362f-4b00-ad83-5ea708de47c9"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f613e87efd0>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X[\"children\"].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"wIW5GA7c2Lg1","executionInfo":{"status":"ok","timestamp":1673047798809,"user_tz":180,"elapsed":19,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"e2a5d028-3ae0-4ec7-b6e0-76914838e2d5"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f613e799610>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# in terms of scaling values, nn tend to prefer normalization"],"metadata":{"id":"IzeHCluf2P4w","executionInfo":{"status":"ok","timestamp":1673047798810,"user_tz":180,"elapsed":17,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["insurance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ZRu8Iisn2_i-","executionInfo":{"status":"ok","timestamp":1673047799098,"user_tz":180,"elapsed":305,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"3ebeca6c-b4b2-4078-9502-abb529ea1b60"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-804d05d9-5385-4ffd-9452-5b7e393ce548\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-804d05d9-5385-4ffd-9452-5b7e393ce548')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-804d05d9-5385-4ffd-9452-5b7e393ce548 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-804d05d9-5385-4ffd-9452-5b7e393ce548');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["from sklearn.compose import make_column_transformer\n","from sklearn.preprocessing import MinMaxScaler, OneHotEncoder"],"metadata":{"id":"_B9qu1bJ66uh","executionInfo":{"status":"ok","timestamp":1673047799099,"user_tz":180,"elapsed":13,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["ct = make_column_transformer(\n","    (MinMaxScaler(), [\"age\", \"bmi\", \"children\"]), # get all values between 0 and 1\n","    (OneHotEncoder(handle_unknown=\"ignore\"), [\"sex\", \"smoker\", \"region\"])\n",")"],"metadata":{"id":"Y9L48i4_6Kww","executionInfo":{"status":"ok","timestamp":1673047799099,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["# Create X & y\n","X = insurance.drop(\"charges\", axis=1)\n","y = insurance[\"charges\"]"],"metadata":{"id":"yHVzj97263C3","executionInfo":{"status":"ok","timestamp":1673047799099,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Build our train and test sets (use random state to ensure same split as before)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"aAvLcf7Y60k8","executionInfo":{"status":"ok","timestamp":1673047799099,"user_tz":180,"elapsed":12,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# Fit column transformer on the training data only (doing so on test data would result in data leakage)\n","ct.fit(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xZDg663_6vq2","executionInfo":{"status":"ok","timestamp":1673047799100,"user_tz":180,"elapsed":13,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"26df6773-1166-43d6-f007-aa14ace3e62f"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ColumnTransformer(transformers=[('minmaxscaler', MinMaxScaler(),\n","                                 ['age', 'bmi', 'children']),\n","                                ('onehotencoder',\n","                                 OneHotEncoder(handle_unknown='ignore'),\n","                                 ['sex', 'smoker', 'region'])])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Transform training and test data with normalization (MinMaxScalar) and one hot encoding (OneHotEncoder)\n","X_train_normal = ct.transform(X_train)"],"metadata":{"id":"-jZWwH386oTA","executionInfo":{"status":"ok","timestamp":1673047799100,"user_tz":180,"elapsed":8,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["# Transform training and test data with normalization (MinMaxScalar) and one hot encoding (OneHotEncoder)\n","X_test_normal = ct.transform(X_test)"],"metadata":{"id":"ybVxL5pj6hKM","executionInfo":{"status":"ok","timestamp":1673047799100,"user_tz":180,"elapsed":8,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["X_train.loc[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odDcsEDx6xlQ","executionInfo":{"status":"ok","timestamp":1673047799100,"user_tz":180,"elapsed":8,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"edf051c4-b387-42a4-e7a0-c983446cae02"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                19\n","sex            female\n","bmi              27.9\n","children            0\n","smoker            yes\n","region      southwest\n","Name: 0, dtype: object"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["X_train_normal[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wOZ-0XWg7H1H","executionInfo":{"status":"ok","timestamp":1673047799100,"user_tz":180,"elapsed":6,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"740b1330-f691-4824-c385-9d204a26eed4"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.60869565, 0.10734463, 0.4       , 1.        , 0.        ,\n","       1.        , 0.        , 0.        , 1.        , 0.        ,\n","       0.        ])"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["X_train.shape, X_train_normal.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rhq1S2_s7em3","executionInfo":{"status":"ok","timestamp":1673047799101,"user_tz":180,"elapsed":6,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"3d854be5-47f8-48b3-e636-8e9ee239eff3"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1070, 6), (1070, 11))"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# Build the model (3 layers, 100, 10, 1 units)\n","final_model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(100),\n","  tf.keras.layers.Dense(10),\n","  tf.keras.layers.Dense(1)\n","])\n","\n","# Compile the model\n","final_model.compile(loss=tf.keras.losses.mae,\n","                          optimizer=tf.keras.optimizers.Adam(),\n","                          metrics=['mae'])\n","\n","# Fit the model for 200 epochs (same as insurance_model_2)\n","final_model.fit(X_train_normal, y_train, epochs=200, verbose=0) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"COb4mMH07iet","executionInfo":{"status":"ok","timestamp":1673047810507,"user_tz":180,"elapsed":11411,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"54e7d62f-906f-45f6-c991-ecfa4c6b6cfc"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f613f630610>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["final_model_loss, final_model_mae = final_model.evaluate(X_test_normal, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Dt-ik-2-ygT","executionInfo":{"status":"ok","timestamp":1673047811046,"user_tz":180,"elapsed":547,"user":{"displayName":"João","userId":"04570462388568966109"}},"outputId":"a9b05b22-b7c7-4547-c63a-f1af46dc8348"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3171.5776 - mae: 3171.5776\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"TlrguPtU_oBD","executionInfo":{"status":"ok","timestamp":1673047811046,"user_tz":180,"elapsed":5,"user":{"displayName":"João","userId":"04570462388568966109"}}},"execution_count":41,"outputs":[]}]}